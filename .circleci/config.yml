version: 2

jobs:
  build:
    docker:
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.14

    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: mkdir -p ${TEST_RESULTS} # create the test results directory

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}

      - run:
          name: Run unit tests
          command: go test -coverprofile=coverage.txt ./...; cp coverage.txt ${TEST_RESULTS}

      - run:
          name: Upload codecov
          command: bash <(curl -s https://codecov.io/bash)

      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - store_artifacts: # upload test summary for display in Artifacts
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results: # upload test results for display in Test Summary
          path: /tmp/test-results

  release:

    docker:
      - image: circleci/golang:1.14

    steps:
      - checkout
      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      
      - run:
          name: Set GoReleaser Version
          command: |
            echo "export VERSION=v0.132.1" >> $BASH_ENV

      - run: 
          name: "Run GoReleaser"
          command: curl -sL https://git.io/goreleaser | bash

workflows:
  version: 2
  build-and-release:
    jobs:
      - build:
          filters:  # required since `release` has tag filters AND requires `build`
            tags:
              only: /.*/
      - release:
          requires:
            - build
          filters: # Only run on git tag pushes
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
